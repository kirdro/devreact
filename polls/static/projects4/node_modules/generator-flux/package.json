{
  "name": "generator-flux",
  "version": "0.4.5",
  "description": "A yeoman generator for app based on Facebook's Flux/React architecture",
  "main": "app/index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/banderson/generator-flux-react"
  },
  "keywords": [
    "flux",
    "react",
    "react.js",
    "reactjs",
    "jsx",
    "yeoman",
    "yeoman-generator",
    "facebook"
  ],
  "author": {
    "name": "Ben Anderson",
    "email": "banderson87@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/banderson/generator-flux-react/issues"
  },
  "homepage": "https://github.com/banderson/generator-flux-react",
  "engines": {
    "node": ">=0.10.0"
  },
  "dependencies": {
    "chalk": "~0.4.0",
    "slug": "^0.8.0",
    "yeoman-generator": "~0.17.0",
    "yosay": "^0.1.0",
    "flux": "^2.0.1"
  },
  "devDependencies": {
    "mocha": "*"
  },
  "peerDependencies": {
    "yo": ">=1.0.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "readme": "# generator-flux\n\n> [Flux](http://facebook.github.io/flux/)/[React](http://facebook.github.io/react/) application generator\n\n#### _Interested in taking next-gen Flux for a spin?_\nTry the new [generator-redux](https://github.com/banderson/generator-redux) to get a sneak peek at the future of functional Flux/React!\n\n## Getting Started\n\n### What is Flux?\n\nIt's an \"Application Architecture for Building User Interfaces\", built by the team at Facebook. It's a set of patterns building larger applications on top of the incredible [React](http://facebook.github.io/react/) component library.\n\n![http://facebook.github.io/flux/docs/overview.html#content](http://facebook.github.io/flux/img/flux-simple-f8-diagram-explained-1300w.png)\n\n\n### Features:\n- [x] Facebook's Flux architecture (using official [dispatcher](https://github.com/facebook/flux/blob/master/src/Dispatcher.js))\n- [x] [Gulp](http://gulpjs.com/) for builds\n- [x] [Browserify](http://browserify.org/) and CJS modules\n- [x] [Babel](https://babeljs.io/) for es6 transpilation\n- [x] Static server with livereload\n- [x] SASS CSS preprocessor\n\n### Basic Support\n- [ ] Choice of UI Framework (React-Bootstrap, Material UI)\n\n#### Coming soon:\n- [ ] React-router\n- [ ] Storage options: `localStorage` and Firebase to start\n- [ ] Test generation (likely using Jest)\n- [ ] Cleaner ActionCreator patterns\n\n### Prerequisites\n\nYou must have [Node.js w/NPM](http://nodejs.org/) installed. I recommend installing via [homebrew](http://brew.sh/), but you should be able to use the [pre-built installers](http://nodejs.org/download/) if you prefer.\n\nAlso, `generator-flux` is a [Yeoman](http://yeoman.io/) generator. If you do not have Yeoman installed, first run:\n\n```bash\n$ npm install -g yo\n```\n\n### Installing the generator\n\nTo install generator-flux from npm, run:\n\n```bash\n$ npm install -g generator-flux\n```\n\nFinally, initiate the generator:\n\n```bash\n$ yo flux\n```\n\n\n### Configuration Options\n\nDuring install-time, you will be prompted to enter some information to help create the project structure and `package.json` file:\n\n* __Application name__ (_string_): A human-readable name for your project, i.e. \"My Flux Application\"\n* __Application Description__ (_string_): Describe your application in one sentence, to be used in `package.json` and the generated `README.md`\n\n\n### Running the scaffolded project\n\nThe generated project includes a live-reloading static server on port `8080` (you can change the port in the `gulpfile.js` config), which will build, launch, and rebuild the app whenever you change application code. To start the server, run:\n\n```bash\n$ npm start\n```\n\nTo run the live-reloading static server on port `8080` with source maps enabled (don't use source maps for production!), run: \n\n```bash\n$ npm run dev\n```\n\nIf you prefer to just build without the live reload and build-on-each-change watcher, run:\n\n```bash\n$ npm run build\n```\n\n\n## After First Run\n\nThe flux generator is still useful even after your app is fully generated. It comes with several subgenerators that you can invoke at any time to add new:\n\n#### Components\n```bash\n$ yo flux:component ComponentName\n```\n\n#### Actions\n```bash\n$ yo flux:action ActionCreatorName\n```\n\n#### Stores\n```bash\n$ yo flux:store StoreName\n```\n\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "generator-flux@0.4.5",
  "_from": "generator-flux@~0.4.5"
}
